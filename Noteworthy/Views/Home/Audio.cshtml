@model Noteworthy.Models.AudioDisplayViewModel

<!-- <h2>Your Records</h2> -->
<!-- <p data-bind="with: CurrentUser"> Hello, <span data-bind="text: DisplayName">Test User</span> </p> -->

@*<p data-bind="with: CurrentUser"> Welcome, <span data-bind="text: DisplayName"></span> </p>*@
<div id="recording-pane" class="col-md-6">
    <div id="lebutton">
        <button data-bind="click: StartRecording" id="AudioButton">

            <img src="~/Content/img/oval.svg" />
            <div id="microphone">
                <img src="~/Content/img/microphone.svg" /></div>
        </button>
        <input id="topicInput" data-bind="value: RecordingTopic">
    </div>
</div>

<script src="~/Scripts/knockout-2.3.0.js"></script>


<div id="note-pane" class="col-md-6">

    <div id="noteWrapper" data-bind="foreach: Notes">
        <div class="note-item">
            <div class="note-heading" data-bind="css:{'note-unread-headline': IsUnread}">
                @Html.Raw("@") <span class="note-username" data-bind="text: User.DisplayName, css:{'note-unread': IsUnread, 'note-username-isread': IsRead}"></span>
                <span data-bind="text: Title, css:{'note-unread': IsUnread}" class="note-topic"></span>
                <span data-bind="text: TimestampString, css:{'note-unread': IsUnread, 'note-unread-timestamp': IsUnread, 'note-timestamp': IsRead}"></span>
            </div>
            <div class="note-audio-text">
                <span data-bind="text: AudioAsText, css:{'note-unread': IsUnread}"></span>
            </div>
            <div class="note-download">
                <a data-bind="attr:{href: AudioS3Path, title: Title}">
                    <img src="~/Content/img/play.svg" /></a>
            </div>

        </div>

    </div>

</div>
<div class="clear"></div>

<script src="~/Scripts/app/audioapplication.js"></script>
<script type="text/javascript">
    var viewModel = @Html.Raw(@Json.Encode(Model));
    AudioInit(viewModel);
</script>
@*public int Id { get; set; }

    [Required]
    public int UserId { get; set; }

    public virtual User User { get; set; }

    [Required]
    public int TopicId { get; set; }
    public virtual Topic Topic { get; set; }

    [MaxLength(60)]
    public string Title { get; set; }
    [Required]
    public string Content { get; set; }

    public string AudioS3Path { get; set; }

    public string AudioAsText { get; set; }*@